[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "trtools"
version = "6.0.0"
authors = [
    "Melissa Gymrek <mgymrek@ucsd.edu>",
    "Gymrek Lab",
]
description = "Toolkit for genome-wide analysis of STRs"
readme = "README.rst"
license = "MIT"
repository = "https://github.com/gymrek-lab/trtools"
homepage = "https://trtools.readthedocs.org"
documentation = "https://trtools.readthedocs.org"
classifiers = [
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
exclude = [
    "trtools/testsupport/*",
    "doc",
    "example-files",
    "trtools/*/*.rst",
    "trtools/*/Example_Files",
    "trtools/dumpSTR/filter_files",
    "trtools/qcSTR/images",
]

[tool.poetry.dependencies]
python = ">=3.7.1,<4.0"
importlib-metadata = {version = ">=3.0.0", python = "<3.8"}
cyvcf2 = ">=0.30.4"
matplotlib = ">=3.1.2"
numpy = ">=1.17.3,<2.0"
pandas = ">=1.2.0"
pysam = ">=0.15.4"
scikit-learn = ">=0.23.1"
scipy = ">=1.3.3"
statsmodels = ">=0.10.2"
pyfaidx = ">=0.5.6"

[tool.poetry.group.tests.dependencies]
pytest = ">=6.2.0"
pytest-cov = ">=3.0.0"

[tool.poetry.group.docs.dependencies]
sphinx = ">=3.0.4"
sphinx-rtd-theme = ">=1.0.0"
sphinx-autodoc-typehints = ">=1.12.0"

[tool.poetry.scripts]
"test_trtools.sh" = {reference = "trtools/testsupport/test_trtools.sh", type = "file"}
"trtools_prep_beagle_vcf.sh" = {reference = "scripts/trtools_prep_beagle_vcf.sh", type = "file"}
dumpSTR = "trtools.dumpSTR:run"
mergeSTR = "trtools.mergeSTR:run"
statSTR = "trtools.statSTR:run"
compareSTR = "trtools.compareSTR:run"
qcSTR = "trtools.qcSTR:run"
associaTR = "trtools.associaTR:run"
prancSTR = "trtools.prancSTR:run"
simTR = "trtools.simTR:run"

[tool.pytest.ini_options]
addopts = """
--ignore noxfile.py
-p trtools.testsupport.dataloader
--doctest-modules
"""

[tool.coverage.run]
omit = [
    ".nox/*",
    "noxfile.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
]

[tool.pylint.BASIC]
function-naming-style = "PascalCase"
method-naming-style = "PascalCase"

[tool.pylint.'MESSAGES CONTROL']
disable = "invalid-name" # not interested in module naming conventions
